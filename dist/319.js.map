{"version":3,"file":"319.js","mappings":"mOAQA,MA8GA,EA9Ge,KACb,MAAM,KAAEA,EAAF,MAAQC,EAAR,OAAeC,IAAWC,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,IAE9CC,EAAOC,EAAeC,IAAYC,EAAAA,EAAAA,GAAS,KAC3CC,EAAUC,EAAkBC,IAAeH,EAAAA,EAAAA,GAAS,KACpDI,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAeC,IAAoBJ,EAAAA,EAAAA,WAAS,IAC5CK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,KACxCO,EAAeC,IAAoBR,EAAAA,EAAAA,WAAS,GAE7CS,GAAmBC,EAAAA,EAAAA,cACtBC,IACCZ,EAAYY,EAAEC,OAAOC,OACrBT,EAAiBO,EAAEC,OAAOC,QAAUZ,KAEtC,CAACA,IAGGa,GAAwBJ,EAAAA,EAAAA,cAC3BC,IACCT,EAAiBS,EAAEC,OAAOC,OAC1BT,EAAiBO,EAAEC,OAAOC,QAAUf,KAEtC,CAACA,IAGGiB,GAAWL,EAAAA,EAAAA,cACdC,IACCA,EAAEK,kBACGb,GAAiBR,IACpBsB,QAAQC,IAAI,cACZZ,EAAe,IACfE,GAAiB,GACjBW,IAAAA,KACQ,aAAc,CAClB5B,MAAAA,EACAI,SAAAA,EACAG,SAAAA,IAEDsB,MAAMC,IACLJ,QAAQC,IAAIG,GACZb,GAAiB,MAElBc,OAAOnC,IACN8B,QAAQC,IAAI/B,EAAMkC,UAClBf,EAAenB,EAAMkC,SAASnC,SAE/BqC,SAAQ,YAGf,CAAChC,EAAOI,EAAUG,EAAUG,EAAeE,IAG7C,YAAaqB,IAATtC,EACK,qCAGLA,EACK,gBAAC,KAAD,CAAUuC,GAAG,iCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMX,SAAUA,GACd,gBAAC,KAAD,CAAOW,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQf,MAAOtB,EAAOsC,SAAUrC,MAGxE,gBAAC,KAAD,CAAOkC,GAAG,kBACR,mCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,OAAOD,GAAG,WAAWE,KAAK,WAAWf,MAAOlB,EAAUkC,SAAUjC,MAGhF,gBAAC,KAAD,CAAO8B,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWf,MAAOf,EAAU+B,SAAUpB,MAGpF,gBAAC,KAAD,CAAOiB,GAAG,wBACR,uCACA,2BACE,gBAAC,KAAD,CACEC,KAAK,WACLD,GAAG,iBACHE,KAAK,iBACLf,MAAOZ,EACP4B,SAAUf,KAGbX,GAAiB,gBAAC,KAAD,0BAChBR,GAAY,gBAAC,KAAD,qBACbU,GAAe,gBAAC,KAAD,KAAQA,GACvBE,GAAiB,gBAAC,KAAD,6BAEpB,gBAAC,KAAD,CAAQoB,KAAK,UAAb,SAEF,gBAAC,KAAD,mBAEE,gBAAC,KAAD,CAAMF,GAAG,UAAT","sources":["webpack://slack_clone/./pages/SignUp/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useState } from 'react';\nimport { Link, Navigate } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { Form, Label, Input, Header, Button, LinkContainer, Error, Success } from './styles';\n\nconst SignUp = () => {\n  const { data, error, mutate } = useSWR('/api/users', fetcher);\n\n  const [email, onChangeEmail, setEmail] = useInput('');\n  const [nickname, onChangeNickname, setNickname] = useInput('');\n  const [password, setPassword] = useState('');\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const [mismatchError, setMismatchError] = useState(false);\n  const [signUpError, setSignUpError] = useState('');\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n\n  const onChangePassword = useCallback(\n    (e) => {\n      setPassword(e.target.value);\n      setMismatchError(e.target.value !== passwordCheck);\n    },\n    [passwordCheck],\n  );\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setMismatchError(e.target.value !== password);\n    },\n    [password],\n  );\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!mismatchError && nickname) {\n        console.log('서버로 회원가입하기');\n        setSignUpError('');\n        setSignUpSuccess(false);\n        axios\n          .post('/api/users', {\n            email,\n            nickname,\n            password,\n          })\n          .then((response) => {\n            console.log(response);\n            setSignUpSuccess(true);\n          })\n          .catch((error) => {\n            console.log(error.response);\n            setSignUpError(error.response.data);\n          })\n          .finally(() => {});\n      }\n    },\n    [email, nickname, password, passwordCheck, mismatchError],\n  );\n\n  if (data === undefined) {\n    return <div>로딩중...</div>;\n  }\n\n  if (data) {\n    return <Navigate to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"nickname-label\">\n          <span>닉네임</span>\n          <div>\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>비밀번호 확인</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\n          {signUpError && <Error>{signUpError}</Error>}\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\n        </Label>\n        <Button type=\"submit\">회원가입</Button>\n      </Form>\n      <LinkContainer>\n        이미 회원이신가요?&nbsp;\n        <Link to=\"/login\">로그인 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"names":["data","error","mutate","useSWR","fetcher","email","onChangeEmail","setEmail","useInput","nickname","onChangeNickname","setNickname","password","setPassword","useState","passwordCheck","setPasswordCheck","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","console","log","axios","then","response","catch","finally","undefined","to","id","type","name","onChange"],"sourceRoot":""}